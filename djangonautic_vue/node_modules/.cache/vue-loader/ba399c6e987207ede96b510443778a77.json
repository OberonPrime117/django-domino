{"remainingRequest":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\src\\views\\Checkout.vue?vue&type=style&index=0&id=e9bc6700&lang=css","dependencies":[{"path":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\src\\views\\Checkout.vue","mtime":1651853702297},{"path":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651854654342},{"path":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1651854663398},{"path":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1651854654143},{"path":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651854653207},{"path":"D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1651854657784}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucGFnZS1jaGVja291dCB7DQogIHBhZGRpbmctcmlnaHQ6IDEwMHB4Ow0KICBwYWRkaW5nLWxlZnQ6IDEwMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiM1ODAwMDA7DQp9DQoudGl0bGUgew0KICBwYWRkaW5nLXRvcDozMHB4Ow0KICBwYWRkaW5nLWJvdHRvbTozMHB4Ow0KfQ0KLmZvcm0tcGFnZS1ib3ggew0KIG1hcmdpbi1ib3R0b206IDEwMHB4Ow0KfQ0KLmlucHV0IHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI0Q5REREQzsNCn0NCg=="},{"version":3,"sources":["D:\\Documents\\GitHub\\django-domino\\djangonautic_vue\\src\\views\\Checkout.vue"],"names":[],"mappings":";AAwPA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B","file":"D:/Documents/GitHub/django-domino/djangonautic_vue/src/views/Checkout.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"page-checkout\">\r\n        <div class=\"columns is-multiline\">\r\n            <div class=\"column is-12\">\r\n                <h1 class=\"title has-text-white\">Checkout</h1>\r\n            </div>\r\n\r\n            <div class=\"column is-12 box\">\r\n                <table class=\"table is-fullwidth\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <tr\r\n                            v-for=\"item in cart.items\"\r\n                            v-bind:key=\"item.product.id\"\r\n                        >\r\n                            <td>{{ item.product.name }}</td>\r\n                            <td>${{ item.product.price }}</td>\r\n                            <td>{{ item.quantity }}</td>\r\n                            <td>${{ getItemTotal(item).toFixed(2) }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colspan=\"2\">Total</td>\r\n                            <td>{{ cartTotalLength }}</td>\r\n                            <td>${{ cartTotalPrice.toFixed(2) }}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"form-page-box column is-12 box\">\r\n                <h2 class=\"subtitle\">Shipping details</h2>\r\n\r\n                <p class=\"has-text-grey mb-4\">* All fields are required</p>\r\n\r\n                <div class=\"columns is-multiline\">\r\n                    <div class=\"column is-6\">\r\n                        <div class=\"field\">\r\n                            <label>First name*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"first_name\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Last name*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"last_name\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>E-mail*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"email\" class=\"input\" v-model=\"email\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Phone*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"phone\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"column is-6\">\r\n                        <div class=\"field\">\r\n                            <label>Address*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"address\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Zip code*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"zipcode\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <label>Place*</label>\r\n                            <div class=\"control\">\r\n                                <input type=\"text\" class=\"input\" v-model=\"place\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"notification is-danger mt-4\" v-if=\"errors.length\">\r\n                    <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\r\n                </div>\r\n\r\n                <hr>\r\n\r\n                <div id=\"card-element\" class=\"mb-5\"></div>\r\n\r\n                <template v-if=\"cartTotalLength\">\r\n                    <hr>\r\n\r\n                    <button class=\"button is-dark\" @click=\"submitForm\">Pay with Stripe</button>\r\n\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'Checkout',\r\n    components: {\r\n\r\n   },\r\n    data() {\r\n        return {\r\n            cart: {\r\n                items: []\r\n            },\r\n            stripe: {},\r\n            card: {},\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            zipcode: '',\r\n            place: '',\r\n            errors: []\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        document.title = 'Checkout '\r\n        this.cart = this.$store.state.cart\r\n        if (this.cartTotalLength > 0) {\r\n            this.stripe = Stripe('#')\r\n            const elements = this.stripe.elements();\r\n            this.card = elements.create('card', { hidePostalCode: true })\r\n            this.card.mount('#card-element')\r\n        }\r\n\r\n\r\n    },\r\n    methods: {\r\n        getItemTotal(item) {\r\n            return item.quantity * item.product.price\r\n        },\r\n        submitForm() {\r\n            this.errors = []\r\n            if (this.first_name === '') {\r\n                this.errors.push('The first name field is missing!')\r\n            }\r\n            if (this.last_name === '') {\r\n                this.errors.push('The last name field is missing!')\r\n            }\r\n            if (this.email === '') {\r\n                this.errors.push('The email field is missing!')\r\n            }\r\n            if (this.phone === '') {\r\n                this.errors.push('The phone field is missing!')\r\n            }\r\n            if (this.address === '') {\r\n                this.errors.push('The address field is missing!')\r\n            }\r\n            if (this.zipcode === '') {\r\n                this.errors.push('The zip code field is missing!')\r\n            }\r\n            if (this.place === '') {\r\n                this.errors.push('The place field is missing!')\r\n            }\r\n            if (!this.errors.length) {\r\n                this.$store.commit('setIsLoading', true)\r\n                this.stripe.createToken(this.card).then(result => {\r\n                    if (result.error) {\r\n                        this.$store.commit('setIsLoading', false)\r\n                        this.errors.push('Something went wrong with Stripe. Please try again')\r\n                        console.log(result.error.message)\r\n                    } else {\r\n                        this.stripeTokenHandler(result.token)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        async stripeTokenHandler(token) {\r\n            const items = []\r\n            for (let i = 0; i < this.cart.items.length; i++) {\r\n                const item = this.cart.items[i]\r\n                const obj = {\r\n                    product: item.product.id,\r\n                    quantity: item.quantity,\r\n                    price: item.product.price * item.quantity\r\n                }\r\n                items.push(obj)\r\n            }\r\n            const data = {\r\n                'first_name': this.first_name,\r\n                'last_name': this.last_name,\r\n                'email': this.email,\r\n                'address': this.address,\r\n                'zipcode': this.zipcode,\r\n                'place': this.place,\r\n                'phone': this.phone,\r\n                'items': items,\r\n                'stripe_token': token.id\r\n            }\r\n            await axios\r\n                .post('api/checkout/', data)\r\n                .then(response => {\r\n                    this.$store.commit('clearCart')\r\n                    this.$router.push('/cart/success')\r\n                })\r\n                .catch(error => {\r\n                    this.errors.push('Something went wrong. Please try again')\r\n                    console.log(error)\r\n                })\r\n                this.$store.commit('setIsLoading', false)\r\n        }\r\n    },\r\n    computed: {\r\n        cartTotalPrice() {\r\n            return this.cart.items.reduce((acc, curVal) => {\r\n                return acc += curVal.product.price * curVal.quantity\r\n            }, 0)\r\n        },\r\n        cartTotalLength() {\r\n            return this.cart.items.reduce((acc, curVal) => {\r\n                return acc += curVal.quantity\r\n            }, 0)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.page-checkout {\r\n  padding-right: 100px;\r\n  padding-left: 100px;\r\n  background-color:#580000;\r\n}\r\n.title {\r\n  padding-top:30px;\r\n  padding-bottom:30px;\r\n}\r\n.form-page-box {\r\n margin-bottom: 100px;\r\n}\r\n.input {\r\n  background-color: #D9DDDC;\r\n}\r\n</style>\r\n"]}]}